<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				width="1098" height="800" 
				backgroundImage=""
				creationComplete="init()"
				initialize="i_init()"
				showCloseButton="false"
				
				headerHeight="20"
				borderAlpha="1.0"
				borderColor="#cccccc"
				xmlns:local="*" 
				>
	
	<mx:HTTPService 
		id="retrievemyfavoritesjob" 
		url="ae_tlch_xmlreq.php" 
		useProxy="false" 
		result="ListHandler(event)"  
		method="POST" 
		fault="faultListHandler(event)"
		contentType="application/xml"  
		>
		<mx:request> 
			<ezware_request>
				<action>refreshData</action>
				<company>{loc_company_code}</company>
				<sid>{loc_session_id}</sid>
				<parameters>{reqParms}</parameters>
				<systemAndJob></systemAndJob>
				<version>1</version>
			</ezware_request>
		</mx:request>
	</mx:HTTPService>
	
	
	<mx:HTTPService 
		id="savemyfavoritebycreate" 
		url="ae_tlch_xmlreq.php" 
		useProxy="false" 
		method="POST" 
		result="CreateResultHandlerMyFavorite(event)"
		fault="CreatefaultListMyFavorite(event)"
		contentType="application/xml"  
		>
		<mx:request> 
			<ezware_request>
				<action>refreshData</action>
				<company>{loc_company_code}</company>
				<sid>{loc_session_id}</sid>
				<parameters>{finalRenditionXML}</parameters>
				<systemAndJob></systemAndJob>
				<version>1</version>
			</ezware_request>
		</mx:request>
	</mx:HTTPService>
	
	
	<mx:HTTPService 
		id="retrievemodifymyfavorite" 
		url="ae_tlch_xmlreq.php" 
		useProxy="false" 
		result="ModifyListHandlerModifyMyFavorites(event)" 
		method="POST" 
		fault="ModifyfaultListHandlerModifyMyFavorites(event)"
		contentType="application/xml"  
		>
		<mx:request> 
			<ezware_request>
				<action>refreshData</action>
				<company>{loc_company_code}</company>
				<sid>{loc_session_id}</sid>
				<parameters>{reqParms}</parameters>
				<systemAndJob></systemAndJob>
				<version>1</version>
			</ezware_request>
		</mx:request>
	</mx:HTTPService>
	
	
	<mx:HTTPService 
		id="retrievemyshortcuts" 
		url="ae_tlch_xmlreq.php" 
		useProxy="false" 
		result="Shortcuthandler(event)"  
		method="POST" 
		fault="faultshortcutHandler(event)"
		contentType="application/xml"  
		>
		<mx:request> 
			<ezware_request>
				<action>refreshData</action>
				<company>{loc_company_code}</company>
				<sid>{loc_session_id}</sid>
				<parameters>{reqParms}</parameters>
				<systemAndJob></systemAndJob>
				<version>1</version>
			</ezware_request>
		</mx:request>
	</mx:HTTPService>
	
	

	<mx:Script source="as/ManagerBean/AlertMessageHandler.as"/> 
	<mx:Script>
		<![CDATA[
			import com.utilities.Utils;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ArrayUtil;
			import mx.utils.ObjectProxy;
			[Bindable]
			public var loc_user_code:String;
			[Bindable]
			public var loc_company_code:String;
			[Bindable]
			public var loc_session_id:String;
			[Bindable]
			private var reqParms:String = new String;
			[Bindable]
			private var MyFavoritesObjectCollection:ArrayCollection = new ArrayCollection;
			[Bindable]	
			private var UserMyFavoritesObjectCollection:ArrayCollection = new ArrayCollection;
			[Bindable]
			private var finalRenditionXML:String = new String;
			[Bindable]
			public var loc_mod_type:String;
			[Bindable]
			public var loc_myfav_List:ArrayCollection;
			[Bindable]
			public var loc_menu_code:String;
			
			[Bindable]
			public var loc_menu_desc:String;
			[Bindable] private var MyFavMyShortcutCollectionMain:ArrayCollection;
			[Bindable] private var MyFavMy_Transient_ShortcutCollectionMain:ArrayCollection = new ArrayCollection;
			
			
			private var selectedName:String = new String;
			public var c_utils:Utils = new Utils();
			private function i_init():void{  
				if ((flash.system.Capabilities.screenResolutionX < 1680) && (flash.system.Capabilities.screenResolutionY < 1050)){
					this.width = 1200;
					this.height = 575;
				}
				
			}
			    
			private function init():void{
				
				
				reqParms = "REFRESH,RETRIEVE|MYSHORTCUTS|" + loc_user_code + "|" + loc_company_code + "|";  
				retrievemyshortcuts.send();
				
				reqParms = "REFRESH,RETRIEVE|OPRJOBS_ALL|" + loc_user_code + "|" + loc_company_code + "|";
				retrievemyfavoritesjob.send();
			}
			
			private function faultListHandler(evt:FaultEvent):void	
			{
				var faultMessage:String = "The origin of this fault is: " + evt.message;
				AlertMessageShow("Error opening file for Retrieving MyFavorites");
			}
			private function faultshortcutHandler(evt:FaultEvent):void	
			{
				var faultMessage:String = "The origin of this fault is: " + evt.message;
				AlertMessageShow("Error opening file for Retrieving MyShortcuts");
			}
			
			private function Shortcuthandler(evt:ResultEvent):void{
				if (evt.result.ezware_response.status == 'OK' ) {
					
					MyFavMyShortcutCollectionMain = new ArrayCollection();
					
					if (evt.result.ezware_response.refresh_data.myshortcuts.myshortcut == null)
					{
						MyFavMyShortcutCollectionMain=new ArrayCollection()
					}
					else if (evt.result.ezware_response.refresh_data.myshortcuts.myshortcut is ArrayCollection)
					{
						MyFavMyShortcutCollectionMain=evt.result.ezware_response.refresh_data.myshortcuts.myshortcut;
					}
					else if (evt.result.ezware_response.refresh_data.myshortcuts.myshortcut is ObjectProxy)
					{
						MyFavMyShortcutCollectionMain = new ArrayCollection(ArrayUtil.toArray(evt.result.ezware_response.refresh_data.myshortcuts.myshortcut)); 
					}
					MyFavMyShortcutCollectionMain.refresh();
					
					
					
					for (var i:int = 0; i < MyFavMyShortcutCollectionMain.length; i++) {
						
						var newObj:Object = new Object;
						
						newObj.job_exec = MyFavMyShortcutCollectionMain[i]['shtcutcode'] + " [" + MyFavMyShortcutCollectionMain[i]['type'] + "]";
						
						newObj.description = MyFavMyShortcutCollectionMain[i]['shtcutdesc'];
						newObj.job_cd = MyFavMyShortcutCollectionMain[i]['shtcutcode'];  
						newObj.job_buttonlabel = MyFavMyShortcutCollectionMain[i]['buttonlabel'];
						newObj.job_viewcode = MyFavMyShortcutCollectionMain[i]['viewcode'];
						newObj.job_mbdcode = MyFavMyShortcutCollectionMain[i]['mbdcode'];
						MyFavMy_Transient_ShortcutCollectionMain.addItem(newObj);
						
					}   
					
					//Alert.show(MyFavMy_Transient_ShortcutCollectionMain.length.toString());
					    
				} else	{
					
					var s_ret:String = resultStatusMyFavoritesCM(evt.result.ezware_response.status, evt.result.ezware_response.reason);  
					AlertMessageShow(s_ret);
					return;
				}				
				
				
			
			
			}
			   
			private function ListHandler(evt:ResultEvent):void{
				
				
				if (evt.result.ezware_response.status == 'OK' ) {
					
					MyFavoritesObjectCollection=new ArrayCollection();
					var suf:String = "job";
					var mainBoard:String = "oprjobs_all";
					if (evt.result.ezware_response.refresh_data[mainBoard][suf] == null)
					{
						MyFavoritesObjectCollection=new ArrayCollection()
					}
					else if (evt.result.ezware_response.refresh_data[mainBoard][suf] is ArrayCollection)
					{
						MyFavoritesObjectCollection=evt.result.ezware_response.refresh_data[mainBoard][suf];
					}
					else if (evt.result.ezware_response.refresh_data[mainBoard][suf] is ObjectProxy)
					{
						MyFavoritesObjectCollection = new ArrayCollection(ArrayUtil.toArray(evt.result.ezware_response.refresh_data[mainBoard][suf])); 
					}
					MyFavoritesObjectCollection.refresh();
				
					//MyFavoritesObjectCollection = new ArrayCollection();
					/*
					if (r_flag_type == 'Create'){
						// Work on the lock columns	
						for (var i:int=0;i<r_lock_columns;i++){
							var obj:Object = new Object;
							obj.type = RenditiontdObjectCollection[i].type;
							obj.columnname = RenditiontdObjectCollection[i].columnname;
							obj.headertext = RenditiontdObjectCollection[i].headertext;
							obj.bgcolor = RenditiontdObjectCollection[i].bgcolor;
							UserRenditiontdObjectCollection.addItem(obj);
						} 
					}
					if (r_flag_type == 'Modify'){
						reqParms = "REFRESH,RENDITION," + r_passed_mainboard + "," + r_user_code + "," + r_file_modify;
						retrievemodifyrendition.send();
					}
					
					
					//  Now time to remove the locked columns on the left datagrid.
					var arr_remove:Array = new Array();
					for (var x:uint=0;x<RenditiontdObjectCollection.length;x++){
						if(x < r_lock_columns){ 
							arr_remove.push(x);
						}			
						
					}
					arr_remove.sort(Array.NUMERIC | Array.DESCENDING);
					for (var b:uint=0;b<arr_remove.length;b++){
						RenditiontdObjectCollection.removeItemAt(arr_remove[b]);
					}  
					
					
					*/
					
					
					if (loc_mod_type == 'modify'){
						reqParms = "REFRESH,RETRIEVE|MYFAVORITE|" +  loc_user_code + "|" + loc_company_code + "|" + c_utils.trim(loc_menu_code);
						retrievemodifymyfavorite.send();
						
						
					}
				} else	{
					
					var s_ret:String = resultStatusMyFavoritesCM(evt.result.ezware_response.status, evt.result.ezware_response.reason);  
					AlertMessageShow(s_ret);
					return;
				}			
				
				
				
				
			}
			private function resultStatusMyFavoritesCM(string_result:String, string_reason:String):String{
				var retstr:String = new String;
				if (string_result == "EXPIRED"){
					retstr = "Session EXPIRED due to inactivity.  Please log out and log back in again to create a new session.";
				} 
				if (string_result == "FAIL"){
					retstr = string_reason;
				} 
				return retstr;
			}
			
			private function selectAlldg1(event:Event):void {
				var arr:Array = new Array();
				for (var a:uint=dataGrid1.dataProvider.length -1 ;a>0;a--){	
					arr.push(a);
				}
				arr.push(0);     
				arr = AscendingSortArray(arr);
				dataGrid1.selectedIndices = arr;
			}
			
			private function selectAlldg1_msc(event:Event):void {
				var arr:Array = new Array();
				for (var a:uint=dataGrid1_sc.dataProvider.length -1 ;a>0;a--){	
					arr.push(a);
				}
				arr.push(0);     
				arr = AscendingSortArray(arr);
				dataGrid1_sc.selectedIndices = arr;
			}
			
			private function AscendingSortArray(myArray:Array):Array
			{ 
				var tempValue:String; 
				var done:String = "no"; 
				var swap:String = "no"; 
				var i:int; 
				var fileTemp1:int; 
				var fileTemp2:int; 
				while (done == "no") { 
					for (i = 0; i < (myArray.length - 1); i++) {
						
						fileTemp1 = myArray[i]; 
						fileTemp2 = myArray[i+1]; 
						if (fileTemp1 > fileTemp2) { 
							tempValue = myArray[i]; 
							myArray[i] = myArray[i+1]; 
							myArray[i+1] = tempValue; 
							swap = "yes"; 
						}
						
						
						
					} 
					
					if (swap == "no") { 
						done = "yes"; 
					} 
					swap = "no"; 
					
					
				} 
				return myArray; 
			}        
			private function eraseText(event:MouseEvent):void
			{
				searchField.text ='';
			}
			
			//////////////////////////////////////////////////
			
			private function searchShortcut(event:Event):void
			{
				//Alert.show("check 1");
				//selectedName = "shtcutcode";
				selectedName = "job_exec";
				searchField_sc.text = (searchField_sc.text).toUpperCase();
				if(searchField_sc.text !='')
				{
					
					filterShortcut();
				}
				else
				{   
				
					filterResetShortcut();
				}
			} 
			
			   
			
			
			public function filterShortcut():void {
				 
				MyFavMy_Transient_ShortcutCollectionMain.filterFunction = filterJobCodeShortcut;
				MyFavMy_Transient_ShortcutCollectionMain.refresh();
				
			}
			private function filterJobCodeShortcut(item:Object):Boolean
			{
				
				return item[selectedName].match(new RegExp(searchField_sc.text, 'i'))
			}
			
			public function filterResetShortcut():void {
				
				
				MyFavMy_Transient_ShortcutCollectionMain.filterFunction = null;
				MyFavMy_Transient_ShortcutCollectionMain.refresh();
				
			}
			
			
			
			
			/////////////////////////////////////////////////////
			private function search(event:Event):void
			{
					//Alert.show("check 1");
					selectedName = "job_exec";
					searchField.text = (searchField.text).toUpperCase();
							if(searchField.text !='')
							{
								filter();
							}
							else
							{   
								filterReset();
							}
			} 
			
			
			
			
			public function filter():void {
				
				
				MyFavoritesObjectCollection.filterFunction = filterJobCode;
				MyFavoritesObjectCollection.refresh();
				  
			}
			private function filterJobCode(item:Object):Boolean
			{
				 
				return item[selectedName].match(new RegExp(searchField.text, 'i'))
			}
			
			public function filterReset():void {
				
				
				MyFavoritesObjectCollection.filterFunction = null;
				MyFavoritesObjectCollection.refresh();
				
			}
			
			
			
			private function datagrid1Click(event:Event):void {
				var arrclick:Array = new Array();
				for(var a:uint=0;a<dataGrid1.selectedItems.length;a++){
					arrclick.push(dataGrid1.selectedIndices[a]);	
				}
				arrclick = AscendingSortArray(arrclick);
				dataGrid1.selectedIndices = arrclick;
			}
			
			private function datagrid1Click_sc(event:Event):void {
				var arrclick:Array = new Array();
				for(var a:uint=0;a<dataGrid1_sc.selectedItems.length;a++){
					arrclick.push(dataGrid1_sc.selectedIndices[a]);	
				}
				arrclick = AscendingSortArray(arrclick);
				dataGrid1_sc.selectedIndices = arrclick;
			}
			
			
			private function removeItem(evt:Event):void {
				
				var arr_rem:Array = new Array();
				var idx:int = new int;
				for(var a:uint=0;a<dataGrid2.selectedItems.length;a++){
					idx = dataGrid2.selectedIndices[a];
					arr_rem.push(idx);
				} 
				arr_rem.sort(Array.NUMERIC | Array.DESCENDING);
				//AlertMessageShow(arr_rem.toString()); 
				for (var b:uint=0;b<arr_rem.length;b++){
					// AlertMessageShow(arr_rem[b].toString()); 
					
					//if(arr_rem[b] >= r_lock_columns){ 
						UserMyFavoritesObjectCollection.removeItemAt(arr_rem[b]); 
					//}			 
					
				}  
				
			} 
			private function clearall(event:Event):void {
				
				var arr:Array = new Array();
				for (var a:uint=dataGrid2.dataProvider.length - 1;a>0;a--){	
					arr.push(a);
				}
				arr.push(0);
				arr = AscendingSortArray(arr);
				dataGrid2.selectedIndices = arr;
				removeItem(event);
			}
			
			private var popaddpanel:PanelName;
			private function addPanelItem(evt:Event):void {
				
				var si:int = dataGrid2.selectedItems.length
				if (si > 1){
					AlertMessageShow("Select only 1 row.");
					return;
				}
				if (si < 1){
					AlertMessageShow("Select a row to insert a Group.");
					return;
				}
				
				if (c_utils.trim(dataGrid2.selectedItem.job_exec) == 'group'){
					AlertMessageShow("Adding a group on top of another group is not allowed.");
					return;
				}
				//Alert.show(dataGrid2.selectedIndex.toString());
				//Alert.show(UserMyFavoritesObjectCollection[dataGrid2.selectedIndex -1]['job_exec'])
					
				if (dataGrid2.selectedIndex > 0){
					if (c_utils.trim(UserMyFavoritesObjectCollection[dataGrid2.selectedIndex -1]['job_exec']) == 'group'){
						AlertMessageShow("Adding a group on top of another group is not allowed.");
						return;
					}	
				}	
				
				popaddpanel = PanelName(
					PopUpManager.createPopUp(this, PanelName, true));
				popaddpanel["btn_submit"].addEventListener("click", addnewPanel);
				popaddpanel["ti_panelname"].addEventListener(KeyboardEvent.KEY_DOWN, addnewPanelkeyboard);
				
				
			}
			private function addnewPanelkeyboard(event:KeyboardEvent):void {   
				if (event.keyCode == 13){
					popaddpanel.btn_submit.setFocus();
					popaddpanel.btn_submit.drawFocus(true);
					addnewPanel(event)
				}
			}
			
			public function addnewPanel(event:Event):void {    
				
				
				if (popaddpanel.ti_panelname.text.length == 0){
					AlertMessageShow("Name should not be blank.");
					return;
				}
				
				if (popaddpanel.ti_panelname.text.length > 0){
					popaddpanel.ti_panelname.text = c_utils.trim(popaddpanel.ti_panelname.text);
					var flag:Boolean = true;
					for( var i:int = 0; i < UserMyFavoritesObjectCollection.length; i++ )
					{
					
						if (((UserMyFavoritesObjectCollection[i].description).toUpperCase() == (popaddpanel.ti_panelname.text).toUpperCase())&&(UserMyFavoritesObjectCollection[i].job_exec == "group")){
							AlertMessageShow("Group name '" + popaddpanel.ti_panelname.text + "' already exists in the current List." ); 
							flag = false;
							break;
						}
					}
					if (flag == false){
						return;
					}
					if (flag == true){ 
						// Continue to add item to datagrid 2
						
						
						var obj:Object = new Object();
						obj.job_exec = 'group';
						obj.job_cd = '';
						obj.description = popaddpanel.ti_panelname.text;
						obj.bgcolor = 'green'; 
						UserMyFavoritesObjectCollection.addItemAt(obj, dataGrid2.selectedIndex); 
					}
				}
				PopUpManager.removePopUp(popaddpanel);
				  
			}

			private function validateSaveWorkflow(event:Event):void {
				
				
				if (UserMyFavoritesObjectCollection[0]['job_exec'] != 'group'){
					AlertMessageShow("First row should be a Group Menu Item");
					return;
					
				} 
				
				currentState	= 'SaveRendition';
				
				inputcode.setFocus();
				   
				
				//if (create_modify == 'C'){
				//	uoc.enabled = true;
				//	gen.enabled = true;
				//	uoc.selected = true
				//	if ( Application.application.parameters.av == 'O'){
						gen.selected = false;
						uoc.selected = true
			//		}
			//		
			//		
			//	} 
				
				
				
				if (loc_mod_type == 'modify'){
					inputcode.text = loc_menu_code;
					inputdescription.text = loc_menu_desc;
					inputcode.enabled = false;
					inputdescription.setFocus();
					
					//inputdescription.enabled= false;
				}
								
				
			
			}
			
			
			
			
			
			private function saveMyFavorites(event:Event):void {
				
			 
				   
				if (inputcode.text == ""){
					AlertMessageShow("Please Enter Menu Item Code.");
					//AlertMessageShow("Please Menu Item Code.");
					inputcode.setFocus();
					inputcode.setStyle("backgroundColor", "#C7CECC");    
					inputdescription.setStyle("backgroundColor", "#ffffff");
					return;
					
				}
				
				
				
				
				if (inputdescription.text == ""){
					AlertMessageShow("Please Enter Description.");
					inputdescription.setFocus();
					inputcode.setStyle("backgroundColor", "#ffffff"); 	
					inputdescription.setStyle("backgroundColor", "#C7CECC");
					return;
				}
				
				if (loc_mod_type == 'create'){
					for(var i:int = 0; i < loc_myfav_List.length; i++){
						
							if (c_utils.trim(loc_myfav_List[i]['code']) == c_utils.trim(inputcode.text)){
								AlertMessageShow("Menu Item Code already exist");
								return;
							}
					}
				}	
				
				btn_save_current.enabled = false;
				createMyFavoriteXML(event);
				
			}
			
			private function createMyFavoriteXML(event:Event):void {
				
				
				var shared:String = "Y";
				
				
				if (uoc.selected == "Y"){
					shared = "N";
				}
				
				var rendition_head:String = '<myfavorite>'
				var rendition_tail:String = '</myfavorite>'
				var rendition_body:String = new String;
				var string_detail:String = new String;	
				var string_final:String = new String();	
				finalRenditionXML = new XML;
				
				
				// Select everything first to get indexing... 
				
				var arr:Array = new Array();
				for (var a:uint=dataGrid1.dataProvider.length -1 ;a>0;a--){	
					arr.push(a);
				}
				arr.push(0);
				
				arr = AscendingSortArray(arr);
				dataGrid2.selectedIndices = arr;
				
				for(var i:int = 0; i < dataGrid2.dataProvider.length; i++){
					var dg_cd:String = dataGrid2.dataProvider[i].job_cd;
					var dg_exec:String = dataGrid2.dataProvider[i].job_exec;
					var dg_desc:String = dataGrid2.dataProvider[i].description;
					var dg_bgcolor:String = dataGrid2.dataProvider[i].bgcolor;
					
					
					var dg_viewcode:String = dataGrid2.dataProvider[i].job_viewcode;
					
					var dg_mbdcode:String = dataGrid2.dataProvider[i].job_mbdcode;
					
					if ((dg_viewcode == null) || (dg_viewcode == 'null')|| (dg_viewcode == '')){
						dg_viewcode = '';
					}
					if ((dg_mbdcode == null) || (dg_mbdcode == 'null')|| (dg_mbdcode == '')){
						dg_mbdcode = '';
					}
					if ((dg_desc == null) || (dg_desc == 'null')|| (dg_desc == '')){
						dg_desc = '';
					}
					if ((dg_cd == null) || (dg_cd== 'null')|| (dg_cd == '')){
						dg_cd = '';
					}
					if ((dg_exec == null) || (dg_exec == 'null')|| (dg_exec == '')){
						dg_exec = '';
					}
					
					  
					
					string_detail = string_detail + '<data>' +
						'<job_cd>' + dg_cd + '</job_cd>' +
						'<job_exec>' + dg_exec + '</job_exec>' +
						'<description>' + dg_desc + '</description>' +
						'<viewcode>' + dg_viewcode + '</viewcode>' +
						'<mbdcode>' + dg_mbdcode + '</mbdcode>' +
						
						'<bgcolor>' + dg_bgcolor + '</bgcolor>' +
						'</data>'
				}
				
				finalRenditionXML = ('REFRESH,UPD_MYFAVORITE,' + rendition_head +
					'<companycode>' + loc_company_code + '</companycode>' +
					'<usercode>' + loc_user_code + '</usercode>' +
					'<myfavcode>' + inputcode.text + '</myfavcode>' +
					'<myfavdesc>' + inputdescription.text + '</myfavdesc>' +
					
					'<shared>' + shared + '</shared>' +   
					
					string_detail +
					rendition_tail);
				savemyfavoritebycreate.send();    
				
			}
			
			private function CreatefaultListMyFavorite(evt:FaultEvent):void
			{
				btn_save_current.enabled = true;
				var faultMessage:String = "The origin of this fault is: " + evt.message;
				AlertMessageShow("Error in saving My Favorite XML to Database");
			}
			
			private function CreateResultHandlerMyFavorite(evt:ResultEvent):void{
				if (evt.result.ezware_response.status == 'OK'){
					//PopUpManager.removePopUp(popMyFavoritesCM);
					PopUpManager.removePopUp(this);
					_callbackFunction(null); 
				} else	{
					btn_save_current.enabled = true;
					var s_ret:String = resultStatusRenditionCM(evt.result.ezware_response.status, evt.result.ezware_response.reason);  
					//AlertMessageShow(s_ret);
					AlertMessageShow(s_ret);
					return;
				}	     
			}
			private function resultStatusRenditionCM(string_result:String, string_reason:String):String{
				var retstr:String = new String;
				if (string_result == "EXPIRED"){
					retstr = "Session EXPIRED due to inactivity.  Please log out and log back in again to create a new session.";
				} 
				if (string_result == "FAIL"){      
					retstr = string_reason;
				} 
				return retstr;
			}
			
			private var _callbackFunction:Function;
			
			public function set callbackFunction( value:Function ):void {
				_callbackFunction = value;
			}
			
			protected function buttonClickedInpopup():void {
				_callbackFunction(null);
			}
			
			
			private function ModifyfaultListHandlerModifyMyFavorites(evt:FaultEvent):void
			{
				
				var faultMessage:String = "The origin of this fault is: " + evt.message;
				AlertMessageShow("Error opening file for Modified Rendition");
			}
			private function ModifyListHandlerModifyMyFavorites(evt:ResultEvent):void{
				
				
				
				if (evt.result.ezware_response.status == "OK"){
					
					
					
					
					UserMyFavoritesObjectCollection=new ArrayCollection()
					var suf:String = "data";
					var mainBoard:String = "myfavorite";
					if (evt.result.ezware_response.refresh_data[mainBoard][suf] == null)
					{
						UserMyFavoritesObjectCollection=new ArrayCollection()
					}
					else if (evt.result.ezware_response.refresh_data[mainBoard][suf] is ArrayCollection)
					{
						UserMyFavoritesObjectCollection=evt.result.ezware_response.refresh_data[mainBoard][suf];
					}
					else if (evt.result.ezware_response.refresh_data[mainBoard][suf] is ObjectProxy)
					{
						UserMyFavoritesObjectCollection = new ArrayCollection(ArrayUtil.toArray(evt.result.ezware_response.refresh_data[mainBoard][suf])); 
					}
					UserMyFavoritesObjectCollection.refresh();
					
					
					
				} else	{
					
					var s_ret:String = resultStatusRenditionCM(evt.result.ezware_response.status, evt.result.ezware_response.reason);  
					AlertMessageShow(s_ret);
					return;
				}	
				
				
				
			}
		]]>
	</mx:Script>
	<mx:states>
		<mx:State name="SaveRendition">
			<mx:AddChild relativeTo="{dataGrid2}" position="before">
				<mx:HBox width="100%" id="hbox2">
					<mx:Label text="Workflow Name" width="191" id="label1" fontWeight="bold" fontSize="14"/>
					<mx:TextInput  backgroundColor="#85E7FF"  width="232" id="inputcode" text=""  maxChars="13" fontSize="14" fontWeight="bold" keyUp=""/>
				</mx:HBox>
			</mx:AddChild>
			<mx:AddChild relativeTo="{dataGrid2}" position="before">
				<mx:HBox width="100%" height="60" id="hbox3">  
					<mx:Label text="Description" width="191" id="label2" fontWeight="bold" fontSize="14"/>
					<mx:TextArea   backgroundColor="#85E7FF"  width="324" height="55" id="inputdescription" text="" fontSize="14" fontWeight="bold"/> 
				</mx:HBox>
			</mx:AddChild>
			
			
			<mx:AddChild relativeTo="{dataGrid2}" position="before">
				<mx:HBox width="100%" id="hbox1">     
					<mx:RadioButtonGroup id="radiogroup3"/>
					<mx:Label text="Share View?" width="207" fontWeight="bold" fontSize="14"/>
					<mx:RadioButton id="gen" label="Yes" groupName="radiogroup4" width="149" />
					<mx:RadioButton id="uoc" label="No" groupName="radiogroup4" width="149" />
				</mx:HBox>
			</mx:AddChild>	
			
			<mx:AddChild relativeTo="{dataGrid2}" position="before">
				<mx:HBox width="100%">
					<mx:Spacer width="100%"/>
					
					<local:HighViewButton doc_id="1046" label="Submit" id="btn_save_current" 
										  fontSize="15" fontWeight="bold"
										  click="{saveMyFavorites(event)}"
										  />   
					<local:HighViewButton label="Cancel" doc_id="1047" id="btn_cancel" 
										  fontSize="15" fontWeight="bold"
										  click="{currentState	= ''}"/>
					
				</mx:HBox>
			</mx:AddChild>	
		</mx:State>
		
		
	</mx:states>
	
	
	<!-- mx:Script source="AlertMessageHandler.as"/ -->

	
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			
			private function titleWindow_close(evt:Event):void{
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
	
	
	
	
	<mx:ApplicationControlBar dock="true" width="100%">
		<!-- mx:Button label="e-Z Learn {parentApplication.mousehoverparslabel}"  id="btn_help" icon="@Embed('image/scholar_cap.png')"
		fontFamily="Arial" textAlign="center"  height="28"
		click="{launchEZLearnMenu(event)}" 
		rollOver="{parentApplication.mbdg_mousehovering(event,'',event.currentTarget.label,'BUTTON')}"
		rollOut="{ parentApplication.mbdg_stopHoverTimer()}"
		width="252"
		styleName="{'highResolutionLabel'}"    
		
		/ -->
		
		<mx:Button id="img_ezlearnswitch" icon="@Embed('image/scholar_cap_special.png')"            
				   height="27"
				   width="78"
				   useHandCursor="true" buttonMode="true"   
				   mouseChildren="false"
				   click="{parentApplication.pre_nt_mousehovering(event,'Workflow Editor','Workflow Editor','BUTTON')}"
				   /> 
		<mx:Spacer width="100%"/>
		<mx:Label id="lbl_titlerend" text="Workflow Editor" fontSize="15" fontWeight="bold" useHandCursor="true" buttonMode="true"
				  />
		<mx:Spacer width="100%"/>
		<mx:Button id="btn_close_window" icon="@Embed('image/icon_logoff.png')"
				   fontFamily="Arial" textAlign="center" fontSize="12"
				   
				   
				   />		
	</mx:ApplicationControlBar>
	
	<mx:HBox width="100%" height="100%">
		
		<mx:VBox width="100%" height="100%">
			<mx:Label text=""  fontSize="15" fontWeight="bold"/>
			<mx:TabNavigator width="100%" height="100%"  fontSize="15" fontWeight="bold">
				<mx:Canvas label="Jobs" width="100%" height="100%"  fontSize="15" fontWeight="bold">
					<mx:VBox width="100%" height="100%">
						
				
					
					
					<mx:HBox width="100%" >
						<mx:Label text="Code Search: "  fontSize="15" fontWeight="bold"/>
						<mx:TextInput id="searchField" toolTip="Filter Job Code"  change="search(event)" fontSize="15" fontWeight="bold"/>
						<mx:Spacer width="100%"/>
						<mx:Button id="btn_dg1_select_all" label="Select All" fontSize="15" click="{selectAlldg1(event)}"
								   rollOver="{parentApplication.mbdg_mousehovering(event,'',event.currentTarget.label,'BUTTON')}"
								   rollOut="{ parentApplication.mbdg_stopHoverTimer()}" 
								   />
					</mx:HBox> 
					
					
					<local:ActionGridADGRendition id="dataGrid1"
												  width="100%"
												  height="100%"
												  rowHeight="22"
												  dataProvider="{MyFavoritesObjectCollection}"
												  dragEnabled="true"
												  verticalScrollPolicy="on"
												  allowMultipleSelection="true"
												  variableRowHeight="true"
												  headerStyleName="centerAlignDataGridCol"
												  horizontalGridLines="true"
												  verticalGridLines="true"
												  horizontalGridLineColor="black"
												  verticalGridLineColor="black" borderColor="#010101" borderThickness="1"
												  sortableColumns="true"
												  dragStart="{datagrid1Click(event)}"
												  > 
						<local:columns>
							<mx:AdvancedDataGridColumn dataField="job_exec" 
													   headerText="Menu Item"  width="25" />
							<mx:AdvancedDataGridColumn dataField="description"
													   headerText="Description" width="75"/>
						</local:columns>
					</local:ActionGridADGRendition>
					
					
					
					
					<mx:Label text="{dataGrid1.dataProvider.length} item(s)"  fontSize="15" fontWeight="bold"/>
					</mx:VBox>
					
				</mx:Canvas>
				<mx:Canvas label="OneClicks" width="100%" height="100%"  fontSize="15" fontWeight="bold">
					<mx:VBox width="100%" height="100%">
						
						
						
						
						<mx:HBox width="100%" >
							<mx:Label text="Code Search: "  fontSize="15" fontWeight="bold"/>
							<mx:TextInput id="searchField_sc"   change="searchShortcut(event)" fontSize="15" fontWeight="bold"/>
							<mx:Spacer width="100%"/>
							<mx:Button id="btn_dg1_select_all_sc" label="Select All" fontSize="15" click="{selectAlldg1_msc(event)}"
									   rollOver="{parentApplication.mbdg_mousehovering(event,'',event.currentTarget.label,'BUTTON')}"
									   rollOut="{ parentApplication.mbdg_stopHoverTimer()}" 
									   />
						</mx:HBox> 
						
						
						<local:ActionGridADGRendition id="dataGrid1_sc"
													  width="100%"
													  height="100%"
													  rowHeight="22"
													  dataProvider="{MyFavMy_Transient_ShortcutCollectionMain}"
													  dragEnabled="true"
													  verticalScrollPolicy="on"
													  allowMultipleSelection="true"
													  variableRowHeight="true"
													  headerStyleName="centerAlignDataGridCol"
													  horizontalGridLines="true"
													  verticalGridLines="true"
													  horizontalGridLineColor="black"
													  verticalGridLineColor="black" borderColor="#010101" borderThickness="1"
													  sortableColumns="true"
													  dragStart="{datagrid1Click_sc(event)}"
													  > 
							  
							<local:columns>
								<mx:AdvancedDataGridColumn dataField="job_exec" 
														   headerText="Menu"  width="200" />
								<mx:AdvancedDataGridColumn dataField="description"
														   headerText="Description" width="300" />
								<mx:AdvancedDataGridColumn dataField="job_buttonlabel" 
														   headerText="Action Grid" width="300" />
								
								<mx:AdvancedDataGridColumn dataField="job_viewcode"
														   headerText="viewcode" width="300" visible="false"/>
								<mx:AdvancedDataGridColumn dataField="job_mbdcode"
														   headerText="" width="300" visible="false"/>
									<mx:AdvancedDataGridColumn dataField="job_code"
															   headerText="" width="300" visible="false"						   
														   
														   />  
							</local:columns>
							
						</local:ActionGridADGRendition>
						
						
						
						
						
						
						
						
						
						
						
						
						
						<mx:Label text="{dataGrid1_sc.dataProvider.length} item(s)"  fontSize="15" fontWeight="bold"/>
					</mx:VBox>
					
				</mx:Canvas>
				
			</mx:TabNavigator>
			
			
		</mx:VBox>
		<mx:VBox height="100%">
			<mx:Spacer height="100%"/>	
			<mx:Spacer width="20%"/>
			<!-- mx:Button id="btn_transfer" label=">" height="41" fontSize="23" color="#3868A3"/ -->
			<mx:Spacer height="100%"/>
		</mx:VBox>
		<mx:VBox width="100%" height="100%">
			<mx:Label text="Create Workflow"  fontSize="15" fontWeight="bold"/>
			<mx:HBox horizontalGap="0">
				<mx:Button id="btn_dg2_addpanel" label="Add Group" fontSize="15" click="{addPanelItem(event)}"
						   rollOver="{parentApplication.mbdg_mousehovering(event,'',event.currentTarget.label,'BUTTON')}"
						   rollOut="{ parentApplication.mbdg_stopHoverTimer()}"/>
				<mx:Button id="btn_dg2_remove" label="Remove" fontSize="15" click="{removeItem(event)}"
						   rollOver="{parentApplication.mbdg_mousehovering(event,'',event.currentTarget.label,'BUTTON')}"
						   rollOut="{ parentApplication.mbdg_stopHoverTimer()}"/>
				
				<mx:Button id="btn_dg2_clear" label="Clear All" fontSize="15" click="{clearall(event)}"
						   rollOver="{parentApplication.mbdg_mousehovering(event,'',event.currentTarget.label,'BUTTON')}"
						   rollOut="{ parentApplication.mbdg_stopHoverTimer()}"/>
				<mx:Button id="btn_dg2_saverendition" label="Save" fontSize="15"
						   rollOver="{parentApplication.mbdg_mousehovering(event,'',event.currentTarget.label,'BUTTON')}"
						   rollOut="{ parentApplication.mbdg_stopHoverTimer()}" 
						   click="{validateSaveWorkflow(event)}"
						   />
			</mx:HBox>
			
			    
			
			<mx:DataGrid        id="dataGrid2"
								width="100%"
								height="100%"
								rowHeight="22"
								dataProvider="{UserMyFavoritesObjectCollection}"
								dragEnabled="true"
								dragMoveEnabled="true"
								dropEnabled="true"
								verticalScrollPolicy="on"
								allowMultipleSelection="true"
								variableRowHeight="true"
								headerStyleName="centerAlignDataGridCol"
								horizontalGridLines="true"
								verticalGridLines="true"
								horizontalGridLineColor="black"
								verticalGridLineColor="black"  borderThickness="1"
								sortableColumns="false"
								
								editable="true"
								
								     
								>
				<mx:columns>  
					
					
					<mx:DataGridColumn  dataField="job_exec" editable="false"  headerText="Menu Item" width="25" itemRenderer="NameLabel"   >
					</mx:DataGridColumn>	
					<mx:DataGridColumn dataField="description" itemRenderer="NameLabel" 
									   headerText="Description" editable="true"  width="75">
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="job_viewcode"  
									   headerText="viewcode" editable="true" visible="false"  width="75">
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="job_mbdcode"     
									   headerText="mbdcode" editable="true" visible="false"  width="75">
					</mx:DataGridColumn>
					
					
					  
					
				</mx:columns>
			</mx:DataGrid>
			<mx:Label text="{dataGrid2.dataProvider.length} item(s)"  fontSize="15" fontWeight="bold" />
		</mx:VBox>
	</mx:HBox>
</mx:TitleWindow>
