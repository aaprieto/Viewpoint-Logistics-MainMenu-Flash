<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// 2007-10-06
//
////////////////////////////////////////////////////////////////////////////////
-->
<!-- width and height hard-coded in the root tag to better support the
     Design view in FlexBuilder since we know the width and height from the
     settings in flexstore.mxml -->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:productsView="productsView.*"
    width="100%" height="100%"
    currentState="showFilter">

    <mx:Script>
        <![CDATA[
        import mx.collections.ArrayCollection;
        import samples.flexstore.Product;

        private var _catalog:ArrayCollection;
        public var _language:String;

        [Bindable]
        public function get catalog():ArrayCollection
        {
            return _catalog;
        }

        public function set catalog(c:ArrayCollection):void
        {
            _catalog = c;
            if (filterPanel != null)
            {
                filterPanel.filter.count = c.length;
            }
        }

        public function addToCompare(product:Product):void
        {
            //setting the state before adding the product avoids jumpiness in the transition, not sure why
            currentState = 'showFilter';
            filterPanel.productList.addProduct(product);
        }

        public function addToCart(product:Product):void
        {
            //setting the state before adding the product avoids jumpiness in the transition, not sure why
            currentState = 'showCart';
            cartPanel.productList.addProduct(product);
        }


        ]]>
    </mx:Script>

    <mx:HBox
        styleName="colorPanel"
        dropShadowEnabled="true"
        height="99%" width="100%"
        verticalScrollPolicy="off"
        horizontalGap="0" id="hbox1">


       		<productsView:ProductFilterPanel id="filterPanel" width="30%" height="100%"
        	  	filter="catalogPanel.filter(event.filter, event.live)"
            	compare="catalogPanel.compare(filterPanel.productList.getProducts())"
            	creationComplete="if (catalog) filterPanel.filter.count = catalog.length"/>


        	 <productsView:ProductCart id="cartPanel" width="70%" height="100%"/>

        <!-- <mx:Spacer width="100%"/> -->



    </mx:HBox>

    <productsView:ProductCatalogPanel id="catalogPanel" y="4" width="685" height="530"
        catalog="{catalog}"
        compare="addToCompare(event.product)"
        purchase="addToCart(event.product)"
        cartCount="{cartPanel.numProducts}"/>

    <mx:states>
       <mx:State name="showFilter">
          <mx:SetProperty target="{catalogPanel}" name="height" value="100%"/>
          <mx:SetProperty target="{catalogPanel}" name="y"/>
          <mx:RemoveChild target="{catalogPanel}"/>
          <mx:AddChild relativeTo="{hbox1}" position="lastChild" target="{catalogPanel}"/>
          <mx:RemoveChild target="{cartPanel}"/>
          <mx:SetProperty target="{catalogPanel}" name="width" value="75%"/>
       </mx:State>
       <mx:State name="showCart">
           <mx:SetStyle target="{catalogPanel}" name="right" value="285"/>
       </mx:State>
    </mx:states>

    <!--
      make sure to use transitions here instead of applying a Move effect
      to the Panel itself which will result in odd behavior
    -->
    <mx:transitions>
       <mx:Transition fromState="*" toState="*">
          <mx:Move target="{catalogPanel}" />
       </mx:Transition>
    </mx:transitions>
</mx:Canvas>
